{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the BookSwap application.",
        "title": "BookSwap API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/books": {
            "get": {
                "description": "Get a list of all books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Book"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book and associate it with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Create Book Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application.CreateBookRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Book"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "description": "CreateUserRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateUserRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their ID",
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "application.CreateBookRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author of the book.\nExample: \"J.D. Salinger\"",
                    "type": "string"
                },
                "genre": {
                    "description": "Genre of the book.\nExample: \"Fiction\"",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the book.\nExample: \"Available\"",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the book.\nExample: \"The Catcher in the Rye\"",
                    "type": "string"
                },
                "userID": {
                    "description": "UserID is the ID of the user associated with the book.\nExample: 1",
                    "type": "integer"
                }
            }
        },
        "application.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "application.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "books": {
                    "description": "Books is a list of books associated with the user.\nExample: [{\"id\": 1, \"user_id\": 1, \"title\": \"Sample Book\", \"author\": \"John Doe\", \"genre\": \"Fiction\", \"status\": \"Available\"}]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Book"
                    }
                },
                "email": {
                    "description": "Email is the email address of the user.\nExample: john.doe@example.com",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the user.\nExample: 1\nNote: This field should not be modified in an update request.",
                    "type": "integer"
                },
                "username": {
                    "description": "Username is the username of the user.\nExample: john_doe",
                    "type": "string"
                }
            }
        },
        "domain.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author is the author of the book.\nExample: \"J.D. Salinger\"",
                    "type": "string"
                },
                "genre": {
                    "description": "Genre is the genre of the book.\nExample: \"Fiction\"",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier for the book.\nExample: 1",
                    "type": "integer"
                },
                "status": {
                    "description": "Status represents the availability status of the book.\nExample: \"Available\"",
                    "type": "string"
                },
                "title": {
                    "description": "Title is the title of the book.\nExample: \"The Catcher in the Rye\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID is the ID of the user associated with the book.\nExample: 1",
                    "type": "integer"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Book"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}